@using Microsoft.AspNetCore.Identity

@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager


@if (SignInManager.IsSignedIn(User))
{
    <form asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })" method="post" id="logoutForm" class="navbar-right ml-auto">
    <ul class="navbar-nav nav-flex-icons navbar-right ml-auto">
        <li class="nav-item nav-link waves-effect">
            <a asp-area="" asp-controller="Account" asp-action="Deposit" class="btn btn-sm btn-outline-success">
                @await Component.InvokeAsync("UserInfo", await UserManager.GetUserAsync(this.User))
            </a>
        </li>
        <li class="nav-item">
            <a asp-area="" asp-controller="Profile" asp-action="Edit" class="nav-link waves-effect">
                Profile
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link waves-effect">
                <input id="logout-button" type="submit"  value="Logout" />
            </a>
        </li>
    </ul>
    </form>
}
else
{
    <ul class="navbar-nav nav-flex-icons navbar-right ml-auto">
        <li id="login-id" class="nav-item"><a asp-area="Identity" asp-page="/Account/Login" class="nav-link waves-effect">Login</a></li>
        <li class="nav-item"><a asp-area="Identity" asp-page="/Account/Register" class="nav-link waves-effect">Register</a></li>
    </ul>
}
